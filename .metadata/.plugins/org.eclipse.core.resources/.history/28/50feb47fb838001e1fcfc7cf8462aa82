package com.brnoz.demo.business.concretes;

import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.brnoz.demo.business.abstracts.CarService;
import com.brnoz.demo.business.constants.Messages;
import com.brnoz.demo.business.dto.requests.created.CreateCarRequest;
import com.brnoz.demo.business.dto.requests.updated.UpdateCarRequest;
import com.brnoz.demo.business.dto.responses.created.CreateCarResponse;
import com.brnoz.demo.business.dto.responses.get.GetAllCarResponse;
import com.brnoz.demo.business.dto.responses.get.GetByCarResponse;
import com.brnoz.demo.business.dto.responses.updated.UpdateCarResponse;
import com.brnoz.demo.business.rules.CarRules;
import com.brnoz.demo.dataAccess.CarRepository;
import com.brnoz.demo.entities.Car;
import com.brnoz.demo.utilities.mapping.ModelMapperService;
import com.brnoz.demo.utilities.results.DataResult;
import com.brnoz.demo.utilities.results.Result;
import com.brnoz.demo.utilities.results.SuccessDataResult;

@Service
public class CarManager implements CarService {

	private CarRepository repository;
	private ModelMapperService mapperService;
	private CarRules rules;

	@Override
	public DataResult<CreateCarResponse> add(CreateCarRequest request) {
		Car car = this.mapperService.forRequest().map(request, Car.class);
		repository.save(car);

		CreateCarResponse response = this.mapperService.forResponse().map(car, CreateCarResponse.class);

		return new SuccessDataResult<CreateCarResponse>(response, Messages.CarCreated);
	}

	@Override
	public DataResult<UpdateCarResponse> update(UpdateCarRequest request) {
		this.rules.checkIfExistByCarId(request.getId());
		Car car = this.mapperService.forRequest().map(request, Car.class);
		this.repository.save(car);

		UpdateCarResponse response = this.mapperService.forResponse().map(car, UpdateCarResponse.class);
		return new SuccessDataResult<UpdateCarResponse>(response, Messages.CarUpdated);
	}

	@Override
	public DataResult<List<GetAllCarResponse>> getAll() {
		List<Car> cars = this.repository.findAll();
		List<GetAllCarResponse> responses = cars.stream()
				.map(car -> this.mapperService.forResponse().map(cars, GetAllCarResponse.class))
				.collect(Collectors.toList());
		return new SuccessDataResult<List<GetAllCarResponse>>(responses, Messages.CarListed);
	}

	@Override
	public DataResult<GetByCarResponse> getByCar(String plateNumber) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Result delete(UUID id) {
		// TODO Auto-generated method stub
		return null;
	}

}
